version: '3'
tasks:
  build:
    cmd: pnpm remix vite:build
  deploy:
    cmd: pnpm wrangler pages deploy ./build/client
    deps: [build]
  lint:
    cmd: pnpm biome lint .
  start:
    cmd: wrangler pages dev ./build/client
  typecheck:
    cmd: tsc
  preview:
    cmd: wrangler pages dev ./build/client
    deps: [build]

  # test
  test:e2e:
    cmd: pnpm playwright test {{.CLI_ARGS}}
  test:e2e:ui:
    cmd: pnpm task test:component -- --ui
  test:component:
    cmd: pnpm playwright test -c playwright-ct.config.ts {{.CLI_ARGS}}
  test:component:ui:
    cmd: pnpm task test:component -- --ui

  # type generation
  build-cf-types:
    cmd: pnpm wrangler types
  db-type:gen:
    desc: Generate db type files
    cmd: |
      rm -rf tmp.db
      sqlite3 tmp.db < db/schema.sql
      DATABASE_URL=tmp.db pnpm kysely-codegen
      rm -rf tmp.db

  # format
  format:
    - task: format:ts
    - task: format:sql
  format:ts:
    cmd: pnpm biome format . --write
  format:sql:
    cmd: pnpm sql-formatter db/schema.sql --fix -c sql-formatterrc.json

  # migrate
  migrate:gen:
    desc: Generate migration files
    cmd: |
      #!/bin/bash
      migration_name=$1
      if [ -z "$1" ]; then
        read -p "Enter migration name: " migration_name
      fi
      pnpm atlas migrate diff --to file://db/schema.sql --dev-url "sqlite://file?mode=memory" $migration_name
  migrate:apply: 
    desc: Apply migrations (local)
    cmd: pnpm wrangler d1 migrations apply remix-kysely-d1 --local
  migrate:apply:prd:
    desc: Apply migrations (prd)
    cmd: pnpm wrangler d1 migrations apply remix-kysely-d1 --remote

  seed:
    desc: Seeds data
    cmd: |
      mkdir -p tmp
      node scripts/create-seed.mjs > tmp/seed.sql
      pnpm wrangler d1 execute remix-kysely-d1 --local --file tmp/seed.sql
      rm -rf tmp

  # log
  log:tail: pnpm wrangler pages deployment tail --project-name remix-kysely-d1
    
